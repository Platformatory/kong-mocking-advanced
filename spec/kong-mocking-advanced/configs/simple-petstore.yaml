openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Simple Pet Store"
  description: "A simple API for a pet store"

paths:
  /pets:
    get:
      summary: "List all pets"
      operationId: "listPets"
      responses:
        "200":
          description: "An array of pets"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  pets:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Pet"
        "default":
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: "Create a new pet"
      operationId: "createPets"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        "201":
          description: "Pet created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "default":
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pets/{petId}:
    get:
      summary: "Get a pet by ID"
      operationId: "getPetById"
      parameters:
        - name: "petId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The pet details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "default":
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Pet:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        tag:
          type: "string"
      required:
        - id
        - name

    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
      required:
        - code
        - message

